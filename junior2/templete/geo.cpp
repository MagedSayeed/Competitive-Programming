long double PI = acosl(-1);
typedef double T;
typedef complex<T> point;
#define X real()
#define Y imag()
#define vec(a,b) ((b)-(a))
#define polar(r,t) ((r)*exp(point(0,(t))))
#define length(v) ((long double)hypot((v).X,(v).Y))
#define angle(v) (atan2((v).Y,(v).X))
#define angle2(a,c) fabs(remainder(angle(a)-angle(c),PI*2))
#define angle3(a,b,c) fabs(remainder(angle((a)-(b))-angle((c)-(b)),PI*2))
#define cross(a,b) ((conj(a)*(b)).Y)
#define dot(a,b) ((conj(a)*(b)).X)
#define lengthSqr(v) (dot(v,v))
#define rotate(v,t) (polar(v,t))
#define rotateabout(v,t,a) (rotate(vec(a,v),t)+(a))
#define reflect(p,m) (conj((p)/(m))*(m))
#define normalize(p) ((p)/length(p))
#define same(a,b) (lengthSqr(vec(a,b))<EPS)
#define mid(a,b) (((a)+(b))/point(2,0))
#define perp(v) (point(-(v).Y,(v).X))
